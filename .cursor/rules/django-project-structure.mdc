---
description: 当用户需要了解Django项目的文件结构、目录组织或项目架构时提供指导。在创建新项目、添加新应用或理解现有Django代码库结构时特别有用。
globs: 
alwaysApply: false
---
# Django项目结构指南

## 核心文件与目录
- `manage.py` - Django项目的命令行工具，用于管理项目
- `项目名称/settings.py` - 项目配置文件，包含数据库配置、中间件等
- `项目名称/urls.py` - 主URL配置，定义URL路由
- `项目名称/wsgi.py` - WSGI应用配置，用于部署
- `项目名称/asgi.py` - ASGI应用配置，用于异步支持

## 应用结构
每个Django应用通常包含以下文件：
- `models.py` - 数据模型定义
- `views.py` - 视图函数或类
- `urls.py` - 应用级URL配置
- `admin.py` - Admin界面配置
- `apps.py` - 应用配置
- `tests.py` - 单元测试
- `migrations/` - 数据库迁移文件

## 模板与静态文件
- `templates/` - HTML模板目录
- `static/` - CSS、JavaScript、图片等静态文件

## 最佳实践
- 将大型项目分解为多个应用
- 每个应用应当专注于特定功能
- 使用模板继承减少重复代码
- 将业务逻辑放在models或单独的services模块中

